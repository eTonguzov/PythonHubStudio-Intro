from tkinter import * # импортируем все из Tkinter
import random, time

def bros():
    x = random.choice(['b.png', 'b2.png', 'b3.png', 'b4.png', 'b5.png','b6.png' ])#рандомный выбор(на вход принимает фаилы картинок)
    return x
def img(event):#функция которая будет запускаться с кнопки(Button)
    global b1, b2
    for i in range(10):# просто сделали цикл 10 шагов где 10 раз будут перембираться варианты картинок
        b1 = PhotoImage(file=(bros()))#метка b1 = Класс PhotoImage(которуму в парметры передаем фаил(функцию бросок(тоесть случайную картинку)))
        b2 = PhotoImage(file=(bros()))
        lab1['image'] = b1#обращаемся к метке 1. К параметру image присваиваем картинку(случайную)
        lab2['image'] = b2
        root.update()#обновление окна
        time.sleep(0.12)#программа будет ждать 0,12 секунду


root = Tk()#определяем главное окно.(Стандартное имя root) И в этой переменной запускаем класс Tk()
root.geometry('400x200')#определяем размер окна.(geometry - метод класса Tk()
root.title('Игра в кости. Сделай бросок')#надпись которая будет отображаться
root.resizable(height= False, width= False)#окно будет иметь постоянные размеры(400х200) определенные в geometry, расянуть его не получится

root.iconphoto(True, PhotoImage(file=('iconka.png')))#размещаем изображение png в иконку. PhotoImage()-встроенный класс в tekinter, который может прочитать изображение.
font = PhotoImage(file=('holst.png'))#переменная font(произвольная) = вызываем класс PhotoImage() и открываем фаил
Label(root, image=font).pack()#вызываем класс Label(root - размещаем в окне, image - размещаем картинку в окне. pack - разместит картинку в окне, по центру

lab1 = Label(root)#лейбл 1 = класс Lable(размещаем на нашем окне root)
lab1.place(relx=0.3, rely=0.5, anchor=CENTER)#этот метод(place) позволяет нам точно разместить на окне метку.
# Метод(place) принимает на вход параметры relX - растояние от левого края 0,3, relY - расстояние от верхнего края 0,5, anchor - якорь = по центру

lab2 = Label(root)
lab2.place(relx=0.7, rely=0.5, anchor=CENTER)

root.bind('<1>', img)#обработчик событий <1>-клик мышки, img - функция которая здесь вызывается
# c помощью метода bind между собой связываются виджет,
# событие и действие. Например, виджет –
# кнопка, событие – клик по ней левой кнопкой мыши, действие – отправка сообщения.

img("event")


root.mainloop()#замыкаем наш цикл
#Последняя строка вызывает функцию mainloop .
# Эта функция вызывает бесконечный цикл окна,
# поэтому окно будет ждать любого взаимодействия
# с пользователем, пока не будет закрыто. В случае,
# если вы забудете вызвать функцию mainloop ,
# для пользователя ничего не отобразится.

